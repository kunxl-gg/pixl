# Application settings
APP_NAME := pixl
BUILD_DIR := ./bin
OBJ_DIR := ./obj
ROOT_DIR := $(shell pwd)

# Source and header files
GLAD_FILE := $(ROOT_DIR)/include/glad.c
IMGUI_FILES := $(ROOT_DIR)/include/imgui/*.cpp
SRC_FILES := $(wildcard ./src/**/*.cpp ./src/*.cpp ./src/**/**/*.cpp)
OBJ_FILES := $(patsubst ./src/%.cpp,$(OBJ_DIR)/%.o,$(SRC_FILES))
GLAD_OBJ := $(OBJ_DIR)/glad.o

# Compiler and flags
CXX := clang++
CXXFLAGS := -std=c++20 -Wall -Wextra -MMD -MP
APP_INCLUDES := -I/Users/kunaltiwari/ -I/Users/kunaltiwari/pixl/include/
APP_FRAMEWORKS := -framework Cocoa -framework OpenGL -framework IOKit
APP_LINKERS := -L/Users/kunaltiwari/pixl/lib/ -lglfw3 -lassimp
APP_RPATH := -Wl,-rpath,/Users/kunaltiwari/pixl/lib/

# Precompiled header
PCH := /Users/kunaltiwari/pixl/src/pixl-precomp.hpp
PCH_GCH := $(OBJ_DIR)/pch.gch

# Define targets
all: $(BUILD_DIR)/$(APP_NAME)

# Compile glad.c to an object file
$(GLAD_OBJ): $(GLAD_FILE)
	@mkdir -p $(OBJ_DIR)
	@echo "Compiling: $<"
	@$(CXX) $(CXXFLAGS) -c $< -o $@

# Precompile header
$(PCH_GCH): $(PCH)
	@mkdir -p $(OBJ_DIR)
	@echo "Precompiling header: $<"
	@$(CXX) $(CXXFLAGS) -x c++-header $< -o $@ $(APP_INCLUDES)

# Compile source files
$(OBJ_DIR)/%.o: ./src/%.cpp $(PCH_GCH)
	@mkdir -p $(dir $@)
	@echo "Compiling: $<"
	@$(CXX) $(CXXFLAGS) -c $< -o $@ $(APP_INCLUDES)

# Link the object files to create the final executable
$(BUILD_DIR)/$(APP_NAME): $(OBJ_FILES) $(GLAD_OBJ)
	@mkdir -p $(BUILD_DIR)
	@echo "Linking: $@"
	@$(CXX) $(CXXFLAGS) $^ -o $@ $(IMGUI_FILES) $(APP_INCLUDES) $(APP_FRAMEWORKS) $(APP_LINKERS) $(APP_RPATH)

# Run the application
run: $(BUILD_DIR)/$(APP_NAME)
	@echo "Running: $<"
	@./$<

# Clean up
clean:
	@echo "Cleaning up..."
	@rm -rf $(BUILD_DIR) $(OBJ_DIR)

# Include dependencies generated by -MMD
-include $(OBJ_FILES:.o=.d)

.PHONY: all run clean
